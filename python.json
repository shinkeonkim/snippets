{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"map int input": {
		"prefix": "mii",
		"body": [
			"map(int, input().split())"
		],
		"description": "map int input"
	},
	"django model comment": {
		"prefix": "mc",
		"body": [
			"\"\"\"Model definition for $1.\"\"\""
		],
		"description": "django model comment"
	},
	"django model meta comment": {
		"prefix": "mmc",
		"body": [
			"\"\"\"Meta definition for $1.\"\"\""
		],
		"description": "django model meta comment"
	},
	"for-i": {
		"prefix": "fori",
		"body": [
			"for i in range($1)",
		],
	},
	"for-j": {
		"prefix": "forj",
		"body": [
			"for j in range($1)",
		],
	},
	"int-input": {
		"prefix": "ii",
		"body": [
			"int(input())",
		],
	},
	"ps": {
		"prefix": "ps",
		"body": [
			"\"\"\"",
			"[$1: $2](https://www.acmicpc.net/problem/$1)",
			"",
			"Tier: Bronze $3",
			"Category: 구현",
			"\"\"\"",
			"",
			"",
			"def solution():",
			"  return \"\"",
			"",
			"",
			"if __name__ == '__main__':",
			"  print(solution())",
			"  $4",
		]
	}
}
